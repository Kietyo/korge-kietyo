package com.soywiz.kds

// AUTOGENERATED: DO NOT MODIFY MANUALLY!


class Queue<TGen>() {
    private val items = CircularList<TGen>()

    val size: Int get() = items.size
    val hasMore: Boolean get() = size > 0
    fun isEmpty() = size == 0
    fun isNotEmpty() = size != 0

    constructor(vararg items: TGen) : this() {
        for (item in items) enqueue(item)
    }

    fun enqueue(v: TGen) = run { items.addLast(v) }
    fun dequeue(): TGen = items.removeFirst()
    fun remove(v: TGen) = run { items.remove(v) }
    fun toList() = items.toList()
}


// Int

class IntQueue() {
    private val items = IntCircularList()

    val size: Int get() = items.size
    val hasMore: Boolean get() = size > 0
    fun isEmpty() = size == 0
    fun isNotEmpty() = size != 0

    constructor(vararg items: Int) : this() {
        for (item in items) enqueue(item)
    }

    fun enqueue(v: Int) = run { items.addLast(v) }
    fun dequeue(): Int = items.removeFirst()
    fun remove(v: Int) = run { items.remove(v) }
    fun toList() = items.toList()
}


// Double

class DoubleQueue() {
    private val items = DoubleCircularList()

    val size: Int get() = items.size
    val hasMore: Boolean get() = size > 0
    fun isEmpty() = size == 0
    fun isNotEmpty() = size != 0

    constructor(vararg items: Double) : this() {
        for (item in items) enqueue(item)
    }

    fun enqueue(v: Double) = run { items.addLast(v) }
    fun dequeue(): Double = items.removeFirst()
    fun remove(v: Double) = run { items.remove(v) }
    fun toList() = items.toList()
}


// Float

class FloatQueue() {
    private val items = FloatCircularList()

    val size: Int get() = items.size
    val hasMore: Boolean get() = size > 0
    fun isEmpty() = size == 0
    fun isNotEmpty() = size != 0

    constructor(vararg items: Float) : this() {
        for (item in items) enqueue(item)
    }

    fun enqueue(v: Float) = run { items.addLast(v) }
    fun dequeue(): Float = items.removeFirst()
    fun remove(v: Float) = run { items.remove(v) }
    fun toList() = items.toList()
}
